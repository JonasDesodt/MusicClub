@inherits CreateEditForm<ActFormModel>

<div class="@(!showLineupDataResultOptions && !showImageDataResultOptions ? "select-closed" : "select-open")">
    <EditForm EditContext="editContext" OnValidSubmit="() => OnValidSubmit.InvokeAsync(FormModel)">
        <DataAnnotationsValidator></DataAnnotationsValidator>

        <ValidationSummary></ValidationSummary>

        <div>
            <div>
                <label for="name">Name</label>

                <InputText @bind-Value="FormModel.Name" id="name" />
            </div>

            <div>
                <label for="title">Title</label>

                <InputText @bind-Value="FormModel.Title" id="title" />
            </div>

            <div>
                <label for="doors">Start</label>

                <InputDate Type="InputDateType.DateTimeLocal" @bind-Value="FormModel.Start" id="start" />
            </div>

            <div>
                <label for="duration">Duration</label>

                <InputNumber @bind-Value="FormModel.Duration" id="duration" />
            </div>

            <LineupDataResultSelect DataResult="FormModel.LineupResult"
                                    Context="ActResult"
                                    OnDataRequest="() => showLineupDataResultOptions = true"
                                    OnRemoveRequest="() => {FormModel.LineupId = null; FormModel.LineupResult = null; NotifyFormChanged();}"
                                    @bind-Value="FormModel.LineupId">
                <Info>
                    <LineupDataResultInfo DataResult="FormModel.LineupResult" />
                </Info>
            </LineupDataResultSelect>

            <ImageDataResultSelect DataResult="FormModel.ImageResult"
                                   Context="ImageResult"
                                   OnDataRequest="() => showImageDataResultOptions = true"
                                   OnRemoveRequest="() => { FormModel.ImageId = null; FormModel.ImageResult = null; NotifyFormChanged(); }"
                                   @bind-Value="FormModel.ImageId">
                <Info>
                    <ImageDataResultInfo ImageDataResult="FormModel.ImageResult" />
                </Info>
            </ImageDataResultSelect>
        </div>

        <div>
            @Buttons
        </div>
    </EditForm>

    @if (showLineupDataResultOptions)
    {
@*         <LineupDataResultOptions OnDataResultSelected="(dataResult) => editContext.SelectDataResult(dataResult, () => dataResult.Id, value => FormModel.LineupId = value, value => FormModel.LineupResult = value)"
                                 OnSelectDisplayStateChanged="(state) => showLineupDataResultOptions = state"
                                 Context="Context">
            <FilterInputs>
                <div>
                    <label for="title">Title</label>

                    <InputText @bind-Value="Context.Title" id="title" />
                </div>

                <div>
                    <label for="doors">Doors</label>

                    <InputDate @bind-Value="Context.Doors" id="doors" />
                </div>
            </FilterInputs>

            <Template>
                <LineupDataResultInfo DataResult="Context" />
            </Template>
        </LineupDataResultOptions> *@
    }

    @if (showImageDataResultOptions)
    {
@*         <ImageDataResultOptions OnDataResultSelected="(dataResult) => editContext.SelectDataResult(dataResult, () => dataResult.Id, value => FormModel.ImageId = value, value => FormModel.ImageResult = value)"
                                OnSelectDisplayStateChanged="(state) => showImageDataResultOptions = state"
                                Context="Context">
            <FilterInputs>
                <div>
                    <label for="alt">Alt</label>

                    <InputText @bind-Value="Context.Alt" id="alt" />
                </div>
            </FilterInputs>

            <Template>
                <ImageDataResultInfo ImageDataResult="Context" />
            </Template>
        </ImageDataResultOptions> *@
    }
</div>

@code {
    private bool showLineupDataResultOptions = false;
    private bool showImageDataResultOptions = false;
}