@inherits CreateEditForm<LineupFormModel>

<CreateEditContainer IsSelectOpen="showImageDataResultOptions">
    <Content>
        <EditForm EditContext="editContext" OnValidSubmit="() => OnValidSubmit.InvokeAsync(FormModel)" @onreset="HandleOnReset">
            <DataAnnotationsValidator></DataAnnotationsValidator>

            <ValidationSummary></ValidationSummary>

            <div>
                <div>
                    <label for="title">Title</label>

                    <InputText @bind-Value="FormModel.Title" id="title" />
                </div>

                <div>
                    <label for="doors">Doors</label>

                    <InputDate @bind-Value="FormModel.Doors" id="doors" />
                </div>

                <ImageDataResultSelect DataResult="FormModel.ImageResult"
                                       Context="ImageResult"
                                       OnDataRequest="() => showImageDataResultOptions = true"
                                       OnRemoveRequest="() => { FormModel.ImageId = null; FormModel.ImageResult = null; NotifyFormChanged(); }"
                                       @bind-Value="FormModel.ImageId">
                    <Info>
                        <ImageDataResultInfo DataResult="FormModel.ImageResult" />
                    </Info>
                </ImageDataResultSelect>
            </div>

            <div class="buttons flex-end">
                @Buttons
            </div>
        </EditForm>

        @if (showImageDataResultOptions)
        {
            <ImageDataResultOptions Context="Context">
                <Header>
                    <OptionsHeader Model="Image" OnCloseRequested="() => showImageDataResultOptions = false" />
                </Header>

                <FilterInputs>
                    <ImageFilterFormModelInputs FilterFormModel="Context" />
                </FilterInputs>

                <Template>
                    <OptionsTemplate DataResult="Context.DataResult"
                                     ShowImage="Context.ShowImages"
                                     EditContext="editContext"
                                     TDataResult="ImageResult"
                                     TDataResultInfo="ImageDataResultInfo"
                                     GetDataResultId="() => Context.DataResult.Id"
                                     SetDataResultId="value => FormModel.ImageId = value"
                                     SetDataResult="value => FormModel.ImageResult = value"
                                     OnDataResultSelected="() => showImageDataResultOptions = false" />
                </Template>
            </ImageDataResultOptions>
        }
    </Content>
</CreateEditContainer>

@code {
    private bool showImageDataResultOptions = false;
}