@inherits CreateEditForm<LineupFormModel>

<div class="@(showImageDataResultOptions ? "select-closed" : "select-open")">
    <EditForm EditContext="editContext" OnValidSubmit="() => OnValidSubmit.InvokeAsync(FormModel)">
        <DataAnnotationsValidator></DataAnnotationsValidator>

        <ValidationSummary></ValidationSummary>

        <div>
            <div>
                <label for="title">Title</label>

                <InputText @bind-Value="FormModel.Title" id="title" />
            </div>

            <div>
                <label for="doors">Doors</label>

                <InputDate @bind-Value="FormModel.Doors" id="doors" />
            </div>

            <ImageDataResultSelect DataResult="FormModel.ImageResult"
                                   Context="ImageResult"
                                   OnDataRequest="() => showImageDataResultOptions = true"
                                   OnRemoveRequest="() => { FormModel.ImageId = null; FormModel.ImageResult = null; NotifyFormChanged(); }"
                                   @bind-Value="FormModel.ImageId">
                <Info>
                    <ImageDataResultInfo ImageDataResult="FormModel.ImageResult" />
                </Info>
            </ImageDataResultSelect>
        </div>

        <div>
            @Buttons
        </div>
    </EditForm>

    @if (showImageDataResultOptions)
    {
        <ImageDataResultOptions OnDataResultSelected="(dataResult) => editContext.SelectDataResult(dataResult, () => dataResult.Id, value => FormModel.ImageId = value, value => FormModel.ImageResult = value)"
                                OnSelectDisplayStateChanged="(state) => showImageDataResultOptions = state"
                                Context="Context">
            <FilterInputs>
                <div>
                    <label for="alt">Alt</label>

                    <InputText @bind-Value="Context.Alt" id="alt" />
                </div>
            </FilterInputs>

            <Template>
                <ImageDataResultInfo ImageDataResult="Context" />
            </Template>
        </ImageDataResultOptions>
    }
</div>

@code {
    private bool showImageDataResultOptions = false;
}