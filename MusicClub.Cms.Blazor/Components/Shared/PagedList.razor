@typeparam TModel
@typeparam TFilter

@inject JsFunctions JsFunctions

@if (PagedServiceResult?.Data is { } results)
{
    <section class="paged-list">
        @if (PagedServiceResult.Pagination.TotalCount == 1)
        {
            <h4>@PagedServiceResult.Pagination.TotalCount result</h4>
        }
        else
        {
            <h4>@PagedServiceResult.Pagination.TotalCount results</h4>
        }

        <ul class="data-list">
            @foreach (var result in results)
            {
                <li>
                    @ItemTemplate(result)
                </li>
            }
        </ul>

        <Pagination Model="PagedServiceResult.Pagination"
                    OnPageChanged="async (request) => { await OnPageChanged.InvokeAsync(request); await JsFunctions.ScrollToTop(); }" />
    </section>
}

@code {
    [Parameter, EditorRequired]
    public PagedServiceResult<IList<TModel>, TFilter>? PagedServiceResult { get; set; }

    [Parameter, EditorRequired]
    public RenderFragment<TModel> ItemTemplate { get; set; } = default!;

    [Parameter, EditorRequired]
    public EventCallback<PaginationRequest> OnPageChanged { get; set; }
}