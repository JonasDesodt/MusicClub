@typeparam TDataResult where TDataResult : class
@typeparam TDataResultInfo where TDataResultInfo : DataResultInfoBase<TDataResult>

<DynamicComponent Type="typeof(TDataResultInfo)" Parameters="new Dictionary<string, object>{ {nameof(DataResultInfoBase<TDataResult>.DataResult), DataResult }}" />

<button @onclick="async () => { EditContext.SelectDataResult(DataResult, GetDataResultId, SetDataResultId, SetDataResult); await OnDataResultSelected.InvokeAsync(); }">Select</button>

@code {
    [Parameter, EditorRequired]
    public required EditContext EditContext { get; set; }

    [Parameter, EditorRequired]
    public required TDataResult DataResult { get; set; }

    [Parameter, EditorRequired]
    public required Func<int> GetDataResultId { get; set; }

    [Parameter, EditorRequired]
    public required Action<int> SetDataResultId { get; set; }

    [Parameter, EditorRequired]
    public required Action<TDataResult> SetDataResult { get; set; }

    [Parameter, EditorRequired]
    public EventCallback OnDataResultSelected { get; set; }
}