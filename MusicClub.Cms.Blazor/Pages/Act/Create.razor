@page "/act/create"

@layout ActLayout

@inject IActApiService ActApiService
@inject NavigationManager NavigationManager
@inject MemoryService MemoryService
@inject DataController DataController

<h3>Create</h3>

<ActCreateEditForm ActFormModel="actFormModel" OnValidSubmit="() => Post()">
    <Buttons>
        <button type="submit">Submit</button>

        <button type="reset">Clear</button>
    </Buttons>
</ActCreateEditForm>

@code {
    [Parameter]
    public int Id { get; set; }

    [CascadingParameter]
    public bool IsOpen { get; set; }

    private ActFormModel? actFormModel { get; set; }

    private PagedServiceResult<IList<PersonResult>, PersonFilterResult>? peoplePagedServiceResult { get; set; }
    private PagedServiceResult<IList<ImageResult>, ImageFilterResult>? imagesPagedServiceResult { get; set; }

    protected override void OnInitialized()
    {
        actFormModel = new();

        base.OnInitialized();
    }

    private async Task Post()
    {
        if (IsOpen)
        {
            return;
        }

        if (actFormModel?.ToRequest() is not { } actRequest)
        {
            return;
        }

        var serviceResult = await DataController.Fetch(async () => await ActApiService.Create(actRequest));
        if (serviceResult.Messages is null)
        {
            MemoryService.HasUnsavedData = false;

            NavigationManager.NavigateTo("/act");
        }
    }
}
