@page "/act"

@layout ActCrudLayout

<div class="index-page @(showLineupDataResultOptions || showImageDataResultOptions ? "select-open" : "select-closed")">
    <DataResultIndexPage TDataRequest="ActRequest"
                         TDataResult="ActResult"
                         TFilterRequest="ActFilterRequest"
                         TFilterResult="ActFilterResult"
                         TApiService="IActService"
                         TFilterFormModel="ActFilterFormModel"
                         OnSelectDisplayStateChanged="(state) => showLineupDataResultOptions = state"
                         Context="Context">
        <FilterInputs>
            <div>
                <label for="name">Name</label>

                <InputText @bind-Value="Context.Name" id="name" />
            </div>

            <div>
                <label for="title">Title</label>

                <InputText @bind-Value="Context.Title" id="title" />
            </div>

            <div>
                <label for="doors">Start</label>

                <InputDate Type="InputDateType.DateTimeLocal" @bind-Value="Context.Start" id="start" />
            </div>

            <div>
                <label for="duration">Duration</label>

                <InputNumber @bind-Value="Context.Duration" id="duration" />
            </div>

            <LineupDataResultSelect DataResult="Context.LineupResult"
                                    Context="ActResult"
                                    OnDataRequest="() => showLineupDataResultOptions = true"
                                    OnRemoveRequest="() => {Context.LineupId = null; Context.LineupResult = null; }"
                                    @bind-Value="Context.LineupId">
                <Info>
                    <LineupDataResultInfo DataResult="Context.LineupResult" />
                </Info>
            </LineupDataResultSelect>

            <ImageDataResultSelect DataResult="Context.ImageResult"
                                   Context="ImageResult"
                                   OnDataRequest="() => showImageDataResultOptions = true"
                                   OnRemoveRequest="() => { Context.ImageId = null; Context.ImageResult = null; }"
                                   @bind-Value="Context.ImageId">
                <Info>
                    <ImageDataResultInfo ImageDataResult="Context.ImageResult" />
                </Info>
            </ImageDataResultSelect>
        </FilterInputs>

        <Template>
            <ActDataResultInfo DataResult="Context" />

            <NavLink href="@($"artist/edit/{Context.Id}")" class="button">Edit</NavLink>
        </Template>

        <DataResultOptions>
            @if (showLineupDataResultOptions)
            {
                <LineupDataResultOptions OnSelectDisplayStateChanged="(state) => showLineupDataResultOptions = state"
                                         Context="DataResultOptionsContext">
                    <FilterInputs>
                        <div>
                            <label for="title">Title</label>

                            <InputText @bind-Value="DataResultOptionsContext.Title" id="title" />
                        </div>

                        <div>
                            <label for="doors">Doors</label>

                            <InputDate @bind-Value="DataResultOptionsContext.Doors" id="doors" />
                        </div>
                    </FilterInputs>

                    <Template>
                        <LineupDataResultInfo DataResult="DataResultOptionsContext" />

                        <button @onclick="() => { Context.SelectDataResult(DataResultOptionsContext, () => DataResultOptionsContext.Id, value => ((ActFilterFormModel)Context.Model).LineupId = value, value => ((ActFilterFormModel)Context.Model).LineupResult = value); showLineupDataResultOptions = false; }">Select</button>
                    </Template>
                </LineupDataResultOptions>
            } 

@*             @if (showImageDataResultOptions)
            {
                <ImageDataResultOptions OnDataResultSelected="(dataResult) => Context.SelectDataResult(dataResult, () => dataResult.Id, value => ((ActFilterFormModel)Context.Model).ImageId = value, value => ((ActFilterFormModel)Context.Model).ImageResult = value)"
                                        OnSelectDisplayStateChanged="(state) => showImageDataResultOptions = state"
                                        Context="DataResultOptionsContext">
                    <FilterInputs>
                        <div>
                            <label for="alt">Alt</label>

                            <InputText @bind-Value="DataResultOptionsContext.Alt" id="alt" />
                        </div>
                    </FilterInputs>

                    <Template>
                        <ImageDataResultInfo ImageDataResult="DataResultOptionsContext" />
                    </Template>
                </ImageDataResultOptions>
            } *@
        </DataResultOptions>
    </DataResultIndexPage>
</div>

@code {
    private bool showLineupDataResultOptions = false;
    private bool showImageDataResultOptions = false;
}