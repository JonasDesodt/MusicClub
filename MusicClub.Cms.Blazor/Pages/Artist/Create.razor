@page "/artist/create"

@layout ArtistLayout

@inject IArtistService ArtistApiService
@inject NavigationManager NavigationManager
@inject MemoryService MemoryService

<h3>Create</h3>

<ArtistCreateEditForm ArtistFormModel="artistFormModel" OnValidSubmit="() => Post()">
    <Buttons>
        <button type="submit">Submit</button>

        <button type="reset">Clear</button>
    </Buttons>
</ArtistCreateEditForm>

@code {
    [Parameter]
    public int Id { get; set; }

    [CascadingParameter]
    public bool IsOpen { get; set; }

    private ArtistFormModel? artistFormModel { get; set; }

    private PagedServiceResult<IList<PersonResult>>? peoplePagedServiceResult { get; set; }
    private PagedServiceResult<IList<ImageResult>>? imagesPagedServiceResult { get; set; }

    protected override void OnInitialized()
    {
        artistFormModel = new();

        base.OnInitialized();
    }

    private async Task Post()
    {
        if (IsOpen)
        {
            return;
        }


        if (artistFormModel?.PersonId is null)
        {
            return;
        }

        var serviceResult = await ArtistApiService.Create(new ArtistRequest { PersonId = (int)artistFormModel.PersonId, ImageId = artistFormModel.ImageId, Alias = artistFormModel.Alias });
        if (serviceResult.Messages is null)
        {
            MemoryService.HasUnsavedData = false;

            NavigationManager.NavigateTo("/artist");
        }
    }
}
