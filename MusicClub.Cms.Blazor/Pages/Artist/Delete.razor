@page "/artist/delete/{id:int}"
@using MusicClub.Cms.Blazor.Helpers

@layout ArtistCrudLayout

<DeleteRequest TDataRequest="ArtistRequest"
               TDataResult="ArtistResult"
               TFilterRequest="ArtistFilterRequest"
               TFilterResult="ArtistFilterResult"
               TApiService="IArtistService"
               TDataResultHelpers="IDataResultHelpers<ArtistResult>"
               Id="Id"
               Model="Artist"
               Context="Context">
    <Info>
        <ul>
            <li>
                <p class="label">Id</p>
                <p class="input">@Context.Id</p>
            </li>

            <li>
                <p class="label">Alias</p>
                <p class="input">@Context.Alias</p>
            </li>

            <li>
                <p class="label">Created</p>
                <p class="input">@Context.Created.ToLongTimeString()</p>
            </li>

            <li>
                <p class="label">Updated</p>
                <p class="input">@Context.Updated.ToLongTimeString()</p>
            </li>

            <li class="@(showPersonImg ? "show-img" : "hide-img")">
                <p class="label">Person</p>
                <p class="input">@Context.PersonResult?.Firstname @Context.PersonResult?.Lastname</p>

                @if (Context.PersonResult?.ImageResult is not null)
                {

                    if (showPersonImg)
                    {
                        <button @onclick="() => showPersonImg = false">Hide image</button>
                    }
                    else
                    {
                        <button @onclick="() => showPersonImg = true">Show image</button>
                    }

                    <img src="@($"https://localhost:7061/image/download/{Context.PersonResult.ImageResult?.Id}?updated={Context.PersonResult.ImageResult?.Updated}")" />
                }
            </li>

            <li class="@(showImageImg ? "show-img" : "hide-img")">
                <p class="label">Image</p>
                <p class="input">@(Context.ImageResult?.Alt ?? "/")</p>

                @if (Context.ImageResult is not null)
                {
                    @if (showImageImg)
                    {
                        <button @onclick="() => showImageImg = false">Hide image</button>
                    }
                    else
                    {
                        <button @onclick="() => showImageImg = true">Show image</button>
                    }

                    <img src="@($"https://localhost:7061/image/download/{Context.ImageResult.Id}?updated={Context.ImageResult.Updated}")" />
                }
            </li>

            <li>
                <p class="label">Dependencies</p>
                @*                 @if(Context.HasCriticalDependencies()) *@
                <ul>
                    <li>Performances: @Context.PerformancesCount</li>
                </ul>
            </li>
        </ul>
    </Info>
</DeleteRequest>

@code {
    [Parameter]
    public int Id { get; set; }

    private bool showPersonImg;
    private bool showImageImg;

}