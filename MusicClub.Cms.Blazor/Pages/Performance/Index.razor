@page "/performance"

@layout PerformanceCrudLayout

<IndexPageContainer IsSelectOpen="showActDataResultOptions || showArtistDataResultOptions || showImageDataResultOptions">
    <Content>
        <PerformanceDataResultIndexPage Context="Context">
            <Header>
                <IndexPageHeader Model="Performance" />
            </Header>

            <FilterInputs>
                <PerformanceFilterFormModelInputs FilterFormModel="Context" />

                <ArtistDataResultSelect DataResult="Context.ArtistResult"
                                        Context="ArtistResult"
                                        OnDataRequest="() => showArtistDataResultOptions = true"
                                        OnRemoveRequest="() => {Context.ArtistId = null; Context.ArtistResult = null;  }"
                                        @bind-Value="Context.ArtistId">
                    <Info>
                        <ArtistDataResultInfo DataResult="Context.ArtistResult" />
                    </Info>
                </ArtistDataResultSelect>

                <ActDataResultSelect DataResult="Context.ActResult"
                                     Context="ActResult"
                                     OnDataRequest="() => showActDataResultOptions = true"
                                     OnRemoveRequest="() => { Context.ActId = null; Context.ActResult = null; }"
                                     @bind-Value="Context.ActId">
                    <Info>
                        <ActDataResultInfo DataResult="Context.ActResult" />
                    </Info>
                </ActDataResultSelect>

                <ImageDataResultSelect DataResult="Context.ImageResult"
                                       Context="ImageResult"
                                       OnDataRequest="() => showImageDataResultOptions = true"
                                       OnRemoveRequest="() => { Context.ImageId = null; Context.ImageResult = null; }"
                                       @bind-Value="Context.ImageId">
                    <Info>
                        <ImageDataResultInfo DataResult="Context.ImageResult" />
                    </Info>
                </ImageDataResultSelect>
            </FilterInputs>

            <Template>
                <IndexPageTemplate Model="Performance" Id="Context.DataResult.Id">
                    <Info>
                        <PerformanceDataResultInfo DataResult="Context.DataResult" ShowImage="Context.ShowImages"/>
                    </Info>
                </IndexPageTemplate>
            </Template>

            <DataResultOptions>
                @if (showActDataResultOptions)
                {
                    <ActDataResultOptions Context="DataResultOptionsContext">
                        <Header>
                            <OptionsHeader Model="Act" OnCloseRequested="() => showActDataResultOptions = false" />
                        </Header>

                        <FilterInputs>
                            <ActFilterFormModelInputs FilterFormModel="DataResultOptionsContext" />
                        </FilterInputs>

                        <Template>
                            <OptionsTemplate TDataResult="ActResult"
                                             TDataResultInfo="ActDataResultInfo"
                                             EditContext="Context"
                                             DataResult="DataResultOptionsContext.DataResult"
                                             GetDataResultId="() => DataResultOptionsContext.DataResult.Id"
                                             SetDataResultId="value => ((PerformanceFilterFormModel)Context.Model).ActId = value"
                                             SetDataResult="value => ((PerformanceFilterFormModel)Context.Model).ActResult = value"
                                             OnDataResultSelected="() => showActDataResultOptions = false" />
                        </Template>
                    </ActDataResultOptions>
                }

                @if (showArtistDataResultOptions)
                {
                    <ArtistDataResultOptions Context="DataResultOptionsContext">
                        <Header>
                            <OptionsHeader Model="Artist" OnCloseRequested="() => showArtistDataResultOptions = false" />
                        </Header>

                        <FilterInputs>
                            <ArtistFilterFormModelInputs FilterFormModel="DataResultOptionsContext" />
                        </FilterInputs>

                        <Template>
                            <OptionsTemplate TDataResult="ArtistResult"
                                             TDataResultInfo="ArtistDataResultInfo"
                                             EditContext="Context"
                                             DataResult="DataResultOptionsContext.DataResult"
                                             GetDataResultId="() => DataResultOptionsContext.DataResult.Id"
                                             SetDataResultId="value => ((PerformanceFilterFormModel)Context.Model).ArtistId = value"
                                             SetDataResult="value => ((PerformanceFilterFormModel)Context.Model).ArtistResult = value"
                                             OnDataResultSelected="() => showArtistDataResultOptions = false" />
                        </Template>
                    </ArtistDataResultOptions>
                }

                @if (showImageDataResultOptions)
                {
                    <ImageDataResultOptions Context="DataResultOptionsContext">
                        <Header>
                            <OptionsHeader Model="Image" OnCloseRequested="() => showImageDataResultOptions = false" />
                        </Header>

                        <FilterInputs>
                            <ImageFilterFormModelInputs FilterFormModel="DataResultOptionsContext" />
                        </FilterInputs>

                        <Template>
                            <OptionsTemplate TDataResult="ImageResult"
                                             TDataResultInfo="ImageDataResultInfo"
                                             EditContext="Context"
                                             DataResult="DataResultOptionsContext.DataResult"
                                             GetDataResultId="() => DataResultOptionsContext.DataResult.Id"
                                             SetDataResultId="value => ((PerformanceFilterFormModel)Context.Model).ImageId = value"
                                             SetDataResult="value => ((PerformanceFilterFormModel)Context.Model).ImageResult = value"
                                             OnDataResultSelected="() => showImageDataResultOptions = false" />
                        </Template>
                    </ImageDataResultOptions>
                }
            </DataResultOptions>
        </PerformanceDataResultIndexPage>
    </Content>
</IndexPageContainer>

@code {
    private bool showActDataResultOptions = false;
    private bool showArtistDataResultOptions = false;
    private bool showImageDataResultOptions = false;
}